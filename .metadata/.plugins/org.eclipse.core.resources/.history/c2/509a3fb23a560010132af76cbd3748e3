package tka_april21_Abstraction;

//Abstraction :-

public abstract class C0_Shape {		// define 5 functionalities
	
	// 1. Child classes should implement that all five methods
	// 2. Only method defination req -- no any body or imple are given by Shape
	// 3. Parent can have imple and body for some method also - greet()

	C0_Shape(){
		
	}
	
	void greet() {
		System.out.println("Welcome to Shape family");
	}
	
	// No code - cir, rect, sqr have different area so only method declaration
	abstract void calArea();		// only defination
	
	abstract void draw();
		
	
	abstract void color();
		
	
	abstract void resize(); 
		
	
	abstract void move();
		
	
	
}

// parent (shape) should have control for his all child means child can add new method or not
// If I add abstract before one or more method so we have to add abstract before that class also.
// Concrete method --> method + body/impl -- greet()
// Abstract method --> only method defination/declaration with abstract keyword
// We showed some method for all or hide for others means Shape showed all his methods for his children but childs hided their methods for their siblings or other child
// Show/Expose required things & hide unnecessary things - Abstraction
// Objective - Data hidding
// Abstraction - concept / theorem
// Technique to achieve - abstract & interface

// Interview Defination -
//	It is one of the pillar of OOP which exposing only required things
//  The objective of abstraction is data hiding
// 	We can achieve abstraction by using abstract keyword
//	There are two types of abstraction are in java we can achieve abstraction by using one abstract class and another interface


// abstract class - 
//  abstract method and concrete method
//  If we dont have body / imp then declare that method as 'abstract method'.
//  If any class having a abstract method, then class should declare as 'abstract class'.
// 	Have data members, methods, constructors
